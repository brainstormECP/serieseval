/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serieseval.forms.Resultados;

import java.awt.BorderLayout;
import java.awt.Container;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import serieseval.Graficos;
import serieseval.ValorCalculado;
import serieseval.controller.AlgorithmController;
import serieseval.controller.ExperimentController;
import serieseval.controller.UserController;
import serieseval.forms.algorithms.*;
import serieseval.model.Algorithm;
import serieseval.model.Datasource;
import serieseval.model.Dmresult;
import serieseval.model.Experimentgroup;
import serieseval.model.User;

/**
 *
 * @author Laura
 */
public class ResultsGraphForm extends javax.swing.JPanel {

    public Experimentgroup experiment;
    /**
     * Creates new form Usuarios
     */
    public ResultsGraphForm(Experimentgroup experiment ) {
        initComponents();
        this.experiment = experiment;
        
        Collection<Datasource> datasources = experiment.getDatasourceCollection();
        List<Dmresult> allResults = new ArrayList<>();
        Integer cantAlg = 0;
        for (Datasource datasource : datasources) {
            if(cantAlg == 0){
                for (Dmresult dmresult : datasource.getDmresultCollection()) {
                    cantAlg ++;
                }
            }
            
            allResults.addAll(datasource.getDmresultCollection());
        } 
        
        Graficos g = new Graficos();        
        CorrelationCoefficientTab.add(new JLabel(new ImageIcon(g.TestGrafico("Correlation Coefficient",ValorCalculado.CorrelationCoefficient,allResults,experiment.getDatasourceCollection().size()))));
        
        MeanAbsoluteErrorTab.add(new JLabel(new ImageIcon(g.TestGrafico("Mean Absolute Error",ValorCalculado.MeanAbsoluteError,allResults,experiment.getDatasourceCollection().size()))));
        
        RelativeAbsoluteErrorTab.add(new JLabel(new ImageIcon(g.TestGrafico("Relative Absolute Error",ValorCalculado.RelativeAbsoluteError,allResults,experiment.getDatasourceCollection().size()))));
        
        RootMeanSquaredErrorTab.add(new JLabel(new ImageIcon(g.TestGrafico("Root Mean Squared Error",ValorCalculado.RootMeanSquaredError,allResults,experiment.getDatasourceCollection().size()))));
        
        RootRelativeSquaredErrorTab.add(new JLabel(new ImageIcon(g.TestGrafico("Root Relative Squared Error",ValorCalculado.RootRelativeSquaredError,allResults,experiment.getDatasourceCollection().size()))));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seriesevalPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("seriesevalPU").createEntityManager();
        algorithmQuery = java.beans.Beans.isDesignTime() ? null : seriesevalPUEntityManager.createQuery("SELECT a FROM Algorithm a");
        algorithmList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : algorithmQuery.getResultList();
        experimentgroupQuery = java.beans.Beans.isDesignTime() ? null : seriesevalPUEntityManager.createQuery("SELECT e FROM Experimentgroup e");
        experimentgroupList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : experimentgroupQuery.getResultList();
        atrasBtn = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        CorrelationCoefficientTab = new javax.swing.JTabbedPane();
        MeanAbsoluteErrorTab = new javax.swing.JTabbedPane();
        RootMeanSquaredErrorTab = new javax.swing.JTabbedPane();
        RelativeAbsoluteErrorTab = new javax.swing.JTabbedPane();
        RootRelativeSquaredErrorTab = new javax.swing.JTabbedPane();

        atrasBtn.setText("Atr√°s");
        atrasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasBtnActionPerformed(evt);
            }
        });

        jTabbedPane2.addTab("Correlation Coefficient", CorrelationCoefficientTab);
        jTabbedPane2.addTab("Mean Absolute Error", MeanAbsoluteErrorTab);
        jTabbedPane2.addTab("Root Mean Squared Error", RootMeanSquaredErrorTab);
        jTabbedPane2.addTab("Relative Absolute Error", RelativeAbsoluteErrorTab);
        jTabbedPane2.addTab("Root Relative Squared Error", RootRelativeSquaredErrorTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(atrasBtn)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(atrasBtn)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void atrasBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasBtnActionPerformed
        // TODO add your handling code here:
        ResultsForm u = new ResultsForm(experiment);
        u.setVisible(true);
        Container c = this.getParent();
        c.removeAll();
        c.setLayout(new BorderLayout());
        c.add(u);
        c.setSize(300, 300);
        c.revalidate();
        c.repaint();
    }//GEN-LAST:event_atrasBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane CorrelationCoefficientTab;
    private javax.swing.JTabbedPane MeanAbsoluteErrorTab;
    private javax.swing.JTabbedPane RelativeAbsoluteErrorTab;
    private javax.swing.JTabbedPane RootMeanSquaredErrorTab;
    private javax.swing.JTabbedPane RootRelativeSquaredErrorTab;
    private java.util.List<serieseval.model.Algorithm> algorithmList;
    private javax.persistence.Query algorithmQuery;
    private javax.swing.JButton atrasBtn;
    private java.util.List<serieseval.model.Experimentgroup> experimentgroupList;
    private javax.persistence.Query experimentgroupQuery;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.persistence.EntityManager seriesevalPUEntityManager;
    // End of variables declaration//GEN-END:variables

    public void persist(Object object) {
        seriesevalPUEntityManager.getTransaction().begin();
        try {
            seriesevalPUEntityManager.persist(object);
            seriesevalPUEntityManager.getTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
            seriesevalPUEntityManager.getTransaction().rollback();
        } finally {
            seriesevalPUEntityManager.close();
        }
    }
}
